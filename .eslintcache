[{"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\reportWebVitals.js":"2","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\App.js":"3","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Login.js":"4","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\spotify.js":"5","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Player.js":"6","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\reducer.js":"7","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\DataLayer.js":"8","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\PlayerBody.js":"9","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Sidebar.js":"10","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\PlayerFooter.js":"11","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SidebarOption.js":"12","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Header.js":"13","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongList.js":"14","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongRow.js":"15","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\HomePage.js":"16","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongCard.js":"17","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\CardRows.js":"18","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SearchBar.js":"19","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SearchCategories.js":"20","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Library.js":"21","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Artists.js":"22"},{"size":682,"mtime":1608842806302,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":2590,"mtime":1610607577682,"results":"26","hashOfConfig":"24"},{"size":379,"mtime":1610536589351,"results":"27","hashOfConfig":"24"},{"size":1004,"mtime":1610607640374,"results":"28","hashOfConfig":"24"},{"size":1435,"mtime":1612174840957,"results":"29","hashOfConfig":"24"},{"size":2453,"mtime":1610551828205,"results":"30","hashOfConfig":"24"},{"size":385,"mtime":1608843300504,"results":"31","hashOfConfig":"24"},{"size":1118,"mtime":1610607367469,"results":"32","hashOfConfig":"24"},{"size":1408,"mtime":1610550360682,"results":"33","hashOfConfig":"24"},{"size":3805,"mtime":1610546891095,"results":"34","hashOfConfig":"24"},{"size":396,"mtime":1610536704013,"results":"35","hashOfConfig":"24"},{"size":981,"mtime":1610546929923,"results":"36","hashOfConfig":"24"},{"size":1969,"mtime":1610550979222,"results":"37","hashOfConfig":"24"},{"size":659,"mtime":1610536758200,"results":"38","hashOfConfig":"24"},{"size":613,"mtime":1610536548433,"results":"39","hashOfConfig":"24"},{"size":762,"mtime":1610547582543,"results":"40","hashOfConfig":"24"},{"size":951,"mtime":1610536495333,"results":"41","hashOfConfig":"24"},{"size":402,"mtime":1610536644728,"results":"42","hashOfConfig":"24"},{"size":703,"mtime":1610536665901,"results":"43","hashOfConfig":"24"},{"size":505,"mtime":1610536567038,"results":"44","hashOfConfig":"24"},{"size":409,"mtime":1610536476269,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8t8ion",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\index.js",[],["99","100"],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Login.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\spotify.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Player.js",["101","102","103"],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\reducer.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\DataLayer.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\PlayerBody.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Sidebar.js",["104"],"import React from 'react'\r\nimport {BrowserRouter as Router, Link} from 'react-router-dom';\r\n\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\n\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport SidebarOption from './SidebarOption'\r\n\r\nimport logo from '../images/white_logo.png'\r\nimport '../css/sidebar.css'\r\n\r\nfunction Sidebar() {\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n    \r\n    return (\r\n        <div className=\"sidebar\">\r\n            <img src={logo} alt=\"spotify_logo\" />\r\n            <Router>\r\n                <Link to='/' className='sidebarOptionWithIcon'><SidebarOption title='Home' Icon={HomeOutlinedIcon}/></Link>\r\n                <Link to='/search' className='sidebarOptionWithIcon'><SidebarOption title='Search' Icon={SearchIcon}/></Link>\r\n                <Link to='/discover_weekly' className='sidebarOptionWithIcon'><SidebarOption title='Your Library' Icon={LibraryMusicIcon}/></Link>\r\n                <br />\r\n                <strong className='sidebarTitle'>PLAYLISTS</strong>\r\n                <hr />\r\n                {playlists?.items?.map((playlist) => (\r\n                    <SidebarOption key={playlist.id} title={playlist.name} />\r\n                ))}\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\PlayerFooter.js",["105"],"import React, {useEffect} from 'react'\r\n\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nimport { Grid, Slider } from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport ShuffleIcon from \"@material-ui/icons/Shuffle\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\n\r\nimport '../css/player_footer.css'\r\n\r\nfunction PlayerFooter({spotify}) {\r\n  const [{ item, playing }, dispatch] = useDataLayerValue();\r\n\r\n  useEffect(() => {\r\n    spotify.getMyCurrentPlaybackState().then((res) => {\r\n\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: res.is_playing,\r\n      });\r\n\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: res.item,\r\n      });\r\n    });\r\n  }, [spotify]);\r\n\r\n  const handlePlayPause = () => {\r\n    if (playing) {\r\n      spotify.pause();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: false,\r\n      });\r\n    } else {\r\n      spotify.play();\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const skipNext = () => {\r\n    spotify.skipToNext();\r\n    spotify.getMyCurrentPlayingTrack().then((res) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: res.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const skipPrevious = () => {\r\n    spotify.skipToPrevious();\r\n    spotify.getMyCurrentPlayingTrack().then((res) => {\r\n      dispatch({\r\n        type: \"SET_ITEM\",\r\n        item: res.item,\r\n      });\r\n      dispatch({\r\n        type: \"SET_PLAYING\",\r\n        playing: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='footer'>\r\n      {/* Album and song details */}\r\n      <div className='footerLeft'>\r\n        <img src={item?.album.images[0].url} alt={item?.name} />\r\n          {item ? (\r\n            <div className='songDetails'>\r\n              <h5>{item.name}</h5>\r\n              <h6>{item.artists.map((artist) => artist.name).join(\", \")}</h6>\r\n            </div>\r\n          ) : (\r\n            <div className='songDetails'>\r\n              <h5>Currently Playing Song Title</h5>\r\n              <h6>Artist</h6>\r\n            </div>\r\n          )}\r\n        <FavoriteBorderIcon fontSize='small' className='footerGreen' />\r\n      </div>\r\n      {/* Player controls */}\r\n      <div className='footerCenter'>\r\n        <ShuffleIcon className='footerGreen' fontSize='small' />\r\n        <SkipPreviousIcon className='footerIcon' onClick={skipNext} />\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n            onClick={handlePlayPause}\r\n            fontSize=\"large\"\r\n            className=\"footerIcon\"\r\n          />\r\n          ) : (\r\n          <PlayCircleOutlineIcon onClick={handlePlayPause} className='footerIcon' fontSize='large' />\r\n        )}\r\n        <SkipNextIcon className='footerIcon' onClick={skipPrevious} />\r\n        <RepeatIcon className='footerGreen' fontSize='small' />\r\n      </div>\r\n      {/* Volume control */}\r\n      <div className='footerRight'>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider aria-labelledby='continuous-slider' color='primary'/>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerFooter\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SidebarOption.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Header.js",["106","107"],"import React from 'react';\r\n\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport '../css/header.css';\r\n\r\nfunction Header() {\r\n    const [{user}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className='header'>\r\n            <div className='headerLeft'>\r\n                <ArrowBackIosIcon fontSize='small' className='back'/>\r\n                <ArrowForwardIosIcon fontSize='small' className='next'/>\r\n            </div>\r\n            <div className='headerRight'>\r\n                <div className='userAvatar'>\r\n                    <Avatar src={user?.images[0]?.url} alt={user?.display_name}/>\r\n                    <h4>{user?.display_name}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongList.js",["108","109","110","111","112"],"import React from 'react';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\nimport { useDataLayerValue } from './DataLayer';\r\nimport SongRow from './SongRow';\r\n\r\nimport '../css/song_list.css'\r\n\r\nfunction SongList({spotify, itemList}) {\r\n    const [{discover_weekly}, dispatch] = useDataLayerValue();\r\n\r\n    const playPlaylist = (id) => {\r\n        spotify\r\n          .play({\r\n            context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\r\n          })\r\n          .then((res) => {\r\n            spotify.getMyCurrentPlayingTrack().then((res) => {\r\n              dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: res.item,\r\n              });\r\n              dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n              });\r\n            });\r\n          });\r\n      };\r\n    \r\n      const playSong = (id) => {\r\n        spotify\r\n          .play({\r\n            uris: [`spotify:track:${id}`],\r\n          })\r\n          .then((res) => {\r\n            spotify.getMyCurrentPlayingTrack().then((res) => {\r\n              dispatch({\r\n                type: \"SET_ITEM\",\r\n                item: res.item,\r\n              });\r\n              dispatch({\r\n                type: \"SET_PLAYING\",\r\n                playing: true,\r\n              });\r\n            });\r\n          });\r\n      };\r\n\r\n    return (\r\n      <div className='song'>\r\n            {/* <div className='icons'>\r\n                <PlayCircleFilledIcon className='shuffleIcon' onClick={playPlaylist}/>\r\n                <FavoriteBorderIcon fontSize='large' />\r\n                <MoreHorizIcon />\r\n            </div> */}\r\n            {itemList?.tracks.items.map((item) => (\r\n                <SongRow key={item.id} playSong={playSong} track={item.track} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongRow.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\HomePage.js",["113"],"import React from 'react'\r\n\r\nimport CardRows from './CardRows'\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nimport '../css/home_page.css'\r\n\r\nfunction HomePage() {\r\n    const [{tracks, newReleases, featuredPlaylists}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='homeBody'>\r\n            <CardRows tracks={tracks} cardHeading='Recently Played' />\r\n            <CardRows tracks={newReleases.albums} cardHeading='New Releases' />\r\n            <CardRows tracks={featuredPlaylists.playlists} cardHeading='Featured Playlists' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SongCard.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\CardRows.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SearchBar.js",[],"C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\SearchCategories.js",["114"],"import React from 'react';\r\n\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nimport '../css/home_page.css';\r\nimport '../css/search_categories.css';\r\n\r\nfunction SearchCategories() {\r\n    const [{categories}, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className='homeBody'>\r\n    <div className='extra'>\r\n        {categories?.categories?.items?.map((category) => (\r\n            <div key={category.id} className='tabs'>\r\n                <h3 className='heading'>{category.name}</h3>\r\n                <img src={category.icons[0].url} alt='' className='image'/>\r\n            </div>        \r\n        ))}                   \r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchCategories\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Library.js",["115"],"import React from 'react';\r\n\r\nimport CardRows from './CardRows';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nimport '../css/home_page.css';\r\n\r\nexport default function Library() {\r\n    const [{playlists, featuredPlaylists}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='homeBody'>\r\n            <CardRows cardHeading='Playlists' tracks={playlists} />\r\n            <CardRows tracks={featuredPlaylists.playlists} cardHeading=\"Editor's Picks\" />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\hp\\Desktop\\spotify-clone\\src\\components\\Artists.js",["116"],"import React from 'react';\r\n\r\nimport CardRows from './CardRows';\r\nimport { useDataLayerValue } from './DataLayer';\r\n\r\nimport '../css/home_page.css';\r\n\r\n\r\nfunction Artists() {\r\n    const [{top_artists}, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className='homeBody'>\r\n            <CardRows cardHeading='Artists' tracks={top_artists} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Artists\r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":15},{"ruleId":"121","severity":1,"message":"125","line":17,"column":31,"nodeType":"123","messageId":"124","endLine":17,"endColumn":40},{"ruleId":"121","severity":1,"message":"126","line":17,"column":44,"nodeType":"123","messageId":"124","endLine":17,"endColumn":52},{"ruleId":"121","severity":1,"message":"126","line":15,"column":25,"nodeType":"123","messageId":"124","endLine":15,"endColumn":33},{"ruleId":"127","severity":1,"message":"128","line":34,"column":6,"nodeType":"129","endLine":34,"endColumn":15,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"131","line":8,"column":8,"nodeType":"123","messageId":"124","endLine":8,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":13,"column":20,"nodeType":"123","messageId":"124","endLine":13,"endColumn":28},{"ruleId":"121","severity":1,"message":"132","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":26},{"ruleId":"121","severity":1,"message":"133","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":21},{"ruleId":"121","severity":1,"message":"134","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":28},{"ruleId":"121","severity":1,"message":"135","line":13,"column":13,"nodeType":"123","messageId":"124","endLine":13,"endColumn":28},{"ruleId":"121","severity":1,"message":"136","line":15,"column":11,"nodeType":"123","messageId":"124","endLine":15,"endColumn":23},{"ruleId":"121","severity":1,"message":"126","line":9,"column":54,"nodeType":"123","messageId":"124","endLine":9,"endColumn":62},{"ruleId":"121","severity":1,"message":"126","line":9,"column":26,"nodeType":"123","messageId":"124","endLine":9,"endColumn":34},{"ruleId":"121","severity":1,"message":"126","line":9,"column":44,"nodeType":"123","messageId":"124","endLine":9,"endColumn":52},{"ruleId":"121","severity":1,"message":"126","line":10,"column":27,"nodeType":"123","messageId":"124","endLine":10,"endColumn":35},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Library' is defined but never used.","Identifier","unusedVar","'playlists' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'SearchBar' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'PlayCircleFilledIcon' is defined but never used.","'discover_weekly' is assigned a value but never used.","'playPlaylist' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [dispatch, spotify]",{"range":"142","text":"143"},[1131,1140],"[dispatch, spotify]"]